- Target: nmaguiar/secutils:build (alpine 3.22.0_alpha20250108)
  Class: os-pkgs
  Type: alpine
- Target: Java
  Class: lang-pkgs
  Type: jar
  Vulnerabilities:
  - VulnerabilityID: CVE-2024-12798
    PkgName: ch.qos.logback:logback-core
    PkgPath: opt/dependency-check/lib/logback-core-1.2.13.jar
    PkgIdentifier:
      PURL: pkg:maven/ch.qos.logback/logback-core@1.2.13
      UID: 75945d17fdbc7707
    InstalledVersion: 1.2.13
    FixedVersion: 1.5.13, 1.3.15
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-12798
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Maven
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven
    Title: 'logback-core: arbitrary code execution via JaninoEventEvaluator'
    Description: "ACE vulnerability in JaninoEventEvaluator  by QOS.CH logback-core\n      upto including version 0.1 to 1.3.14 and\_1.4.0 to 1.5.12 in Java applications allows\n      attacker to execute arbitrary code by compromising an existing\n      logback configuration file or by injecting an environment variable\n      before program execution.\n\n\n\n\n\nMalicious logback configuration files can allow the attacker to execute \narbitrary code using the JaninoEventEvaluator extension.\n\n\n\nA successful attack requires the user to have write access to a \nconfiguration file. Alternatively, the attacker could inject a malicious \nenvironment variable pointing to a malicious configuration file. In both \ncases, the attack requires existing privilege."
    Severity: MEDIUM
    CweIDs:
    - CWE-917
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:H/A:L
        V3Score: 5.5
    References:
    - https://access.redhat.com/security/cve/CVE-2024-12798
    - https://github.com/qos-ch/logback
    - https://github.com/qos-ch/logback/commit/2cb6d520df7592ef1c3a198f1b5df3c10c93e183
    - https://logback.qos.ch/news.html#1.3.15
    - https://logback.qos.ch/news.html#1.5.13
    - https://nvd.nist.gov/vuln/detail/CVE-2024-12798
    - https://www.cve.org/CVERecord?id=CVE-2024-12798
    PublishedDate: '2024-12-19T16:15:07.557Z'
    LastModifiedDate: '2025-01-03T14:15:24.37Z'
  - VulnerabilityID: CVE-2024-12801
    PkgName: ch.qos.logback:logback-core
    PkgPath: opt/dependency-check/lib/logback-core-1.2.13.jar
    PkgIdentifier:
      PURL: pkg:maven/ch.qos.logback/logback-core@1.2.13
      UID: 75945d17fdbc7707
    InstalledVersion: 1.2.13
    FixedVersion: 1.5.13, 1.3.15
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-12801
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Maven
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven
    Title: 'logback-core: SaxEventRecorder vulnerable to Server-Side Request Forgery (SSRF) attacks'
    Description: "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 0.1 to 1.3.14 and 1.4.0 to 1.5.12\_ on the Java platform, allows an attacker to \nforge requests by compromising logback configuration files in XML.\n\n\n\nThe attacks involves the modification of DOCTYPE declaration in\_ XML configuration files."
    Severity: LOW
    CweIDs:
    - CWE-918
    VendorSeverity:
      ghsa: 1
      redhat: 1
    CVSS:
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N
        V3Score: 3.3
    References:
    - https://access.redhat.com/security/cve/CVE-2024-12801
    - https://github.com/qos-ch/logback
    - https://github.com/qos-ch/logback/commit/5f05041cba4c4ac0a62748c5c527a2da48999f2d
    - https://logback.qos.ch/news.html#1.3.15
    - https://logback.qos.ch/news.html#1.5.13
    - https://nvd.nist.gov/vuln/detail/CVE-2024-12801
    - https://www.cve.org/CVERecord?id=CVE-2024-12801
    PublishedDate: '2024-12-19T17:15:08.93Z'
    LastModifiedDate: '2025-01-03T14:15:24.5Z'
- Target: Python
  Class: lang-pkgs
  Type: python-pkg
- Target: usr/bin/grype
  Class: lang-pkgs
  Type: gobinary
  Vulnerabilities:
  - VulnerabilityID: CVE-2024-40635
    PkgID: github.com/containerd/containerd@v1.7.26
    PkgName: github.com/containerd/containerd
    PkgIdentifier:
      PURL: pkg:golang/github.com/containerd/containerd@v1.7.26
      UID: 5c7bb43084464733
    InstalledVersion: v1.7.26
    FixedVersion: 1.7.27, 1.6.38
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-40635
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'containerd: containerd has an integer overflow in User ID handling'
    Description: containerd is an open-source container runtime. A bug was found in containerd prior to versions 1.6.38, 1.7.27, and 2.0.4 where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user. This bug has been fixed in containerd 1.6.38, 1.7.27, and 2.04. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.
    Severity: MEDIUM
    CweIDs:
    - CWE-190
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
    References:
    - https://access.redhat.com/security/cve/CVE-2024-40635
    - https://github.com/containerd/containerd
    - https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da
    - https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20
    - https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a
    - https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg
    - https://nvd.nist.gov/vuln/detail/CVE-2024-40635
    - https://www.cve.org/CVERecord?id=CVE-2024-40635
    PublishedDate: '2025-03-17T22:15:13.15Z'
    LastModifiedDate: '2025-03-17T22:15:13.15Z'
- Target: usr/bin/syft
  Class: lang-pkgs
  Type: gobinary
  Vulnerabilities:
  - VulnerabilityID: CVE-2024-40635
    PkgID: github.com/containerd/containerd@v1.7.26
    PkgName: github.com/containerd/containerd
    PkgIdentifier:
      PURL: pkg:golang/github.com/containerd/containerd@v1.7.26
      UID: 1816dbc8dcaf0317
    InstalledVersion: v1.7.26
    FixedVersion: 1.7.27, 1.6.38
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-40635
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'containerd: containerd has an integer overflow in User ID handling'
    Description: containerd is an open-source container runtime. A bug was found in containerd prior to versions 1.6.38, 1.7.27, and 2.0.4 where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user. This bug has been fixed in containerd 1.6.38, 1.7.27, and 2.04. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.
    Severity: MEDIUM
    CweIDs:
    - CWE-190
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
    References:
    - https://access.redhat.com/security/cve/CVE-2024-40635
    - https://github.com/containerd/containerd
    - https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da
    - https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20
    - https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a
    - https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg
    - https://nvd.nist.gov/vuln/detail/CVE-2024-40635
    - https://www.cve.org/CVERecord?id=CVE-2024-40635
    PublishedDate: '2025-03-17T22:15:13.15Z'
    LastModifiedDate: '2025-03-17T22:15:13.15Z'
- Target: usr/bin/trivy
  Class: lang-pkgs
  Type: gobinary
  Vulnerabilities:
  - VulnerabilityID: CVE-2024-40635
    PkgID: github.com/containerd/containerd@v1.7.25
    PkgName: github.com/containerd/containerd
    PkgIdentifier:
      PURL: pkg:golang/github.com/containerd/containerd@v1.7.25
      UID: 8240b491a8d158b4
    InstalledVersion: v1.7.25
    FixedVersion: 1.7.27, 1.6.38
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-40635
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'containerd: containerd has an integer overflow in User ID handling'
    Description: containerd is an open-source container runtime. A bug was found in containerd prior to versions 1.6.38, 1.7.27, and 2.0.4 where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user. This bug has been fixed in containerd 1.6.38, 1.7.27, and 2.04. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.
    Severity: MEDIUM
    CweIDs:
    - CWE-190
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
    References:
    - https://access.redhat.com/security/cve/CVE-2024-40635
    - https://github.com/containerd/containerd
    - https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da
    - https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20
    - https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a
    - https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg
    - https://nvd.nist.gov/vuln/detail/CVE-2024-40635
    - https://www.cve.org/CVERecord?id=CVE-2024-40635
    PublishedDate: '2025-03-17T22:15:13.15Z'
    LastModifiedDate: '2025-03-17T22:15:13.15Z'
  - VulnerabilityID: CVE-2024-40635
    PkgID: github.com/containerd/containerd/v2@v2.0.2
    PkgName: github.com/containerd/containerd/v2
    PkgIdentifier:
      PURL: pkg:golang/github.com/containerd/containerd/v2@v2.0.2
      UID: f231ef62045c0603
    InstalledVersion: v2.0.2
    FixedVersion: 2.0.4
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-40635
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'containerd: containerd has an integer overflow in User ID handling'
    Description: containerd is an open-source container runtime. A bug was found in containerd prior to versions 1.6.38, 1.7.27, and 2.0.4 where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user. This bug has been fixed in containerd 1.6.38, 1.7.27, and 2.04. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.
    Severity: MEDIUM
    CweIDs:
    - CWE-190
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N
        V3Score: 4.6
    References:
    - https://access.redhat.com/security/cve/CVE-2024-40635
    - https://github.com/containerd/containerd
    - https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da
    - https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20
    - https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a
    - https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg
    - https://nvd.nist.gov/vuln/detail/CVE-2024-40635
    - https://www.cve.org/CVERecord?id=CVE-2024-40635
    PublishedDate: '2025-03-17T22:15:13.15Z'
    LastModifiedDate: '2025-03-17T22:15:13.15Z'
  - VulnerabilityID: CVE-2025-30204
    PkgID: github.com/golang-jwt/jwt/v4@v4.5.1
    PkgName: github.com/golang-jwt/jwt/v4
    PkgIdentifier:
      PURL: pkg:golang/github.com/golang-jwt/jwt/v4@v4.5.1
      UID: ef284d3652aede40
    InstalledVersion: v4.5.1
    FixedVersion: 4.5.2
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2025-30204
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: golang-jwt is a Go implementation of JSON Web Tokens. Prior to  5.2.2  ...
    Description: |-
      golang-jwt is a Go implementation of JSON Web Tokens. Prior to 
      5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.
    Severity: HIGH
    CweIDs:
    - CWE-405
    VendorSeverity:
      ghsa: 3
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
        V3Score: 7.5
    References:
    - https://github.com/golang-jwt/jwt
    - https://github.com/golang-jwt/jwt/commit/0951d184286dece21f73c85673fd308786ffe9c3
    - https://github.com/golang-jwt/jwt/security/advisories/GHSA-mh63-6h87-95cp
    PublishedDate: '2025-03-21T22:15:26.42Z'
    LastModifiedDate: '2025-03-21T22:15:26.42Z'
  - VulnerabilityID: CVE-2025-30204
    PkgID: github.com/golang-jwt/jwt/v5@v5.2.1
    PkgName: github.com/golang-jwt/jwt/v5
    PkgIdentifier:
      PURL: pkg:golang/github.com/golang-jwt/jwt/v5@v5.2.1
      UID: c8cf692079723bbb
    InstalledVersion: v5.2.1
    FixedVersion: 5.2.2
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2025-30204
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: golang-jwt is a Go implementation of JSON Web Tokens. Prior to  5.2.2  ...
    Description: |-
      golang-jwt is a Go implementation of JSON Web Tokens. Prior to 
      5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.
    Severity: HIGH
    CweIDs:
    - CWE-405
    VendorSeverity:
      ghsa: 3
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
        V3Score: 7.5
    References:
    - https://github.com/golang-jwt/jwt
    - https://github.com/golang-jwt/jwt/commit/0951d184286dece21f73c85673fd308786ffe9c3
    - https://github.com/golang-jwt/jwt/security/advisories/GHSA-mh63-6h87-95cp
    PublishedDate: '2025-03-21T22:15:26.42Z'
    LastModifiedDate: '2025-03-21T22:15:26.42Z'
  - VulnerabilityID: CVE-2025-22870
    PkgID: golang.org/x/net@v0.35.0
    PkgName: golang.org/x/net
    PkgIdentifier:
      PURL: pkg:golang/golang.org/x/net@v0.35.0
      UID: 325e684f5d1e2a9e
    InstalledVersion: v0.35.0
    FixedVersion: 0.36.0
    Status: fixed
    Layer:
      Digest: sha256:51175ec55754c747bef65520858f50b79fa8a1bf2e4c82379a4c039125ac27d2
      DiffID: sha256:8599814c7e75b9781b03462b0c1e943f1ce9765d7a7f523dd48a8a916f8f4c05
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2025-22870
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'golang.org/x/net/proxy: golang.org/x/net/http/httpproxy: HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net'
    Description: Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to "*.example.com", a request to "[::1%25.example.com]:80` will incorrectly match and not be proxied.
    Severity: MEDIUM
    CweIDs:
    - CWE-115
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L
        V3Score: 4.4
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L
        V3Score: 4.4
    References:
    - http://www.openwall.com/lists/oss-security/2025/03/07/2
    - https://access.redhat.com/security/cve/CVE-2025-22870
    - https://go-review.googlesource.com/q/project:net
    - https://go.dev/cl/654697
    - https://go.dev/issue/71984
    - https://nvd.nist.gov/vuln/detail/CVE-2025-22870
    - https://pkg.go.dev/vuln/GO-2025-3503
    - https://www.cve.org/CVERecord?id=CVE-2025-22870
    PublishedDate: '2025-03-12T19:15:38.31Z'
    LastModifiedDate: '2025-03-18T17:15:45.467Z'
- Target: usr/bin/trivy_cve_query
  Class: lang-pkgs
  Type: gobinary
